{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <div class="float-end">
        <button type="button" id="button-refresh" data-bs-toggle="tooltip" title="{{ button_refresh }}" class="btn btn-light"><i class="fa-solid fa-sync"></i></button>
        <button type="button" id="button-enable" form="form-comment" value="{{ enable }}" data-bs-toggle="tooltip" title="{{ button_enable }}" class="btn btn-success"><i class="fa-solid fa-plus-circle"></i></button>
        <button type="button" id="button-disable" form="form-comment" value="{{ disable }}" data-bs-toggle="tooltip" title="{{ button_disable }}" class="btn btn-danger"><i class="fa-solid fa-minus-circle"></i></button>
        <button type="button" id="button-spam" form="form-comment" value="{{ spam }}" data-bs-toggle="tooltip" title="{{ button_spam }}" class="btn btn-warning"><i class="fa-solid fa-ban"></i></button>
		<button type="button" id="button-add" form="form-comment" onclick="openCommentDialog(this);" data-bs-toggle="tooltip" title="{{ button_comment }}" class="btn btn-info"><i class="fa-solid fa-comment-medical"></i></button>
        <button type="button" id="button-delete" form="form-comment" value="{{ delete }}" data-bs-toggle="tooltip" title="{{ button_delete }}" class="btn btn-danger"><i class="fa-regular fa-trash-can"></i></button>
      </div>
      <h1>{{ heading_title }}</h1>
      <ol class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
          <li class="breadcrumb-item"><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ol>
    </div>
  </div>
  <div class="container-fluid">
    <div class="row">
      <div id="filter-comment" class="col-lg-3 col-md-12 order-lg-last d-none d-lg-block mb-3">
        <div class="card">
          <div class="card-header"><i class="fa fa-filter"></i> {{ text_filter }}</div>
          <div class="card-body">
            <form id="form-filter">
              <div class="mb-3">
                <label for="input-article" class="form-label">{{ entry_article }}</label> <input type="text" name="filter_article" value="{{ filter_article }}" placeholder="{{ entry_article }}" id="input-article" data-oc-target="autocomplete-article" class="form-control" autocomplete="off"/>
                <ul id="autocomplete-article" class="dropdown-menu"></ul>
              </div>
              <div class="mb-3">
                <label for="input-author" class="form-label">{{ entry_author }}</label> <input type="text" name="filter_author" value="{{ filter_author }}" placeholder="{{ entry_author }}" id="input-author" data-oc-target="autocomplete-author" class="form-control" autocomplete="off"/>
                <ul id="autocomplete-author" class="dropdown-menu"></ul>
              </div>
              <div class="mb-3">
                <label for="input-admin" class="form-label">{{ entry_author_type }}</label>
                <select name="filter_admin" id="input-admin" class="form-select"/>
                  <option value=""></option>
                  <option value="1"{% if filter_admin == '1' %} selected{% endif %}>{{ entry_author_customer }}</option>
                  <option value="0"{% if filter_admin == '0' %} selected{% endif %}>{{ entry_author_admin }}</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="input-comment" class="form-label">{{ entry_comment }}</label> <input type="text" name="filter_comment" value="{{ filter_comment }}" placeholder="{{ entry_comment }}" id="input-comment" data-oc-target="autocomplete-comment" class="form-control" autocomplete="off"/>
                <ul id="autocomplete-comment" class="dropdown-menu"></ul>
              </div>
              <div class="mb-3">
                <label for="input-customer" class="form-label">{{ entry_customer }}</label> <input type="text" name="filter_customer" value="{{ filter_customer }}" placeholder="{{ entry_customer }}" id="input-customer" data-oc-target="autocomplete-customer" class="form-control" autocomplete="off"/>
                <ul id="autocomplete-customer" class="dropdown-menu"></ul>
              </div>
              <div class="mb-3">
                <label for="input-comment-type" class="form-label">{{ entry_comment_type }}</label>
                <select name="filter_comment_type" id="input-comment-type" class="form-select"/>
                  <option value=""></option>
                  <option value="0"{% if filter_comment_type == '0' %} selected{% endif %}>{{ entry_comment_comment }}</option>
                  <option value="1"{% if filter_comment_type == '1' %} selected{% endif %}>{{ entry_comment_reply }}</option>
                </select>
              </div>
			  <div class="mb-3">
                <label for="input-rating-from" class="form-label">{{ entry_rating }}</label>
                <div class="row">
                  <div class="col">
                    <input type="text" name="filter_rating_from" value="" placeholder="{{ entry_rating_from }}" id="input-rating-from" class="form-control">
                  </div>
                  <label class="col-auto col-form-label px-0"><i class="fa-solid fa-minus"></i></label>
                  <div class="col">
                    <input type="text" name="filter_rating_to" value="" placeholder="{{ entry_rating_to }}" id="input-rating-to" class="form-control">
                  </div>
                </div>
              </div>
              <div class="mb-3">
                <label for="input-status" class="form-label">{{ entry_status }}</label>
                <select name="filter_status" id="input-status" class="form-select"/>
                  <option value=""></option>
                  <option value="1"{% if filter_status == '1' %} selected{% endif %}>{{ text_enabled }}</option>
                  <option value="0"{% if filter_status == '0' %} selected{% endif %}>{{ text_disabled }}</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="input-date-from" class="form-label">{{ entry_date_from }}</label>
                <input type="date" name="filter_date_from" value="{{ filter_date_from }}" placeholder="{{ entry_date_from }}" id="input-date-from" class="form-control"/>
              </div>
              <div class="mb-3">
                <label for="input-date-to" class="form-label">{{ entry_date_to }}</label>
                <input type="date" name="filter_date_to" value="{{ filter_date_to }}" placeholder="{{ entry_date_to }}" id="input-date-to" class="form-control"/>
              </div>
              <div class="text-end">
                <button type="submit" id="button-filter" class="btn btn-light"><i class="fa fa-filter"></i> {{ button_filter }}</button>
                <button type="reset" data-bs-toggle="tooltip" title="{{ button_reset }}" class="btn btn-outline-secondary"><i class="fa-solid fa-filter-circle-xmark"></i></button>
              </div>
            </form>
          </div>
        </div>
      </div>
      <div class="col-lg-9 col-md-12">
        <div class="card">
          <div class="card-header"><i class="fa fa-list"></i> {{ text_list }}</div>
          <div class="card-body">
            <div id="list">{{ list }}</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript"><!--
$('#list').on('click', '.pagination a', function(e) {
    e.preventDefault();

    $('#list').load(this.href);
});

$('#form-filter').on('submit', function(e) {
    e.preventDefault();

    let url = $(this).serialize();

	// Get selected Sort item text and twiddle to get 'sort' and 'order'.
	var sel = $('#form-comment #input-sort').children("option:selected").html();
	var lcText = sel.toLowerCase();

	// Oldest and Lowest = ASC. Latest and Highest = DESC
	var sort = lcText.includes('{{ text_rating_needle }}') ? 'rating' : 'date_modified';
	var order = (lcText.includes('{{ text_oldest_needle }}') || lcText.includes('{{ text_lowest_needle }}')) ? 'ASC' : 'DESC';
	var sortOrder = '&sort=' + sort + '&order=' + order;

    window.history.pushState({}, null, 'index.php?route=cms/comment&user_token={{ user_token }}&' + url + sortOrder);

    $('#list').load('index.php?route=cms/comment.list&user_token={{ user_token }}&' + url + sortOrder);
});

$('#button-enable, #button-disable, #button-spam, #button-delete').on('click', function () {
	if (this.id == 'button-spam') {
		if (!confirm('{{ text_confirm_spam }}')) {
			return;
		}
	} else {
		if (!confirm('{{ text_confirm }}')) {
			return;
		}
	}

    var element = this;

    $.ajax({
        url: $(element).val(),
		type: 'post',
		data: $('#form-comment input[name^=\'selected\']:checked').serialize(),
        dataType: 'json',
        beforeSend: function() {
            $(element).button('loading');
        },
        complete: function() {
            $(element).button('reset');
        },
        success: function(json) {
            $('.alert-dismissible').remove();

            if (json['error']) {
                $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fas fa-exclamation-circle"></i> ' + json['error'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
            }

            if (json['success']) {
                $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fas fa-check-circle"></i> ' + json['success'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                $('#list').load($('#form-comment').attr('data-oc-load'));
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
            console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
    });
});

$('#list').on('click', '[id^=button-enable-], [id^=button-disable-], [id^=button-spam-], [id^=button-delete-]', function() {
	if (this.id.startsWith('button-spam')) {
		if (!confirm('{{ text_confirm_spam }}')) {
			return;
		}
	} else if (this.id.startsWith('button-delete')) {
		if (!confirm('{{ text_confirm }}')) {
			return;
		}
	}

    var element = this;

    $.ajax({
        url: $(element).val(),
        dataType: 'json',
        beforeSend: function() {
            $(element).button('loading');
        },
        complete: function() {
            $(element).button('reset');
        },
        success: function(json) {
            $('.alert-dismissible').remove();

            if (json['error']) {
                $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fas fa-exclamation-circle"></i> ' + json['error'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
            }

            if (json['success']) {
                $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fas fa-check-circle"></i> ' + json['success'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                $('#list').load($('#form-comment').attr('data-oc-load'));
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
            console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
    });
});

$('#input-article').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=cms/comment.autocomplete&user_token={{ user_token }}&filter_article=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['article_comment_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-article').val(decodeHTMLEntities(item['label']));
    }
});

$('#input-author').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=cms/comment.autocomplete&user_token={{ user_token }}&filter_author=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['customer_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-author').val(decodeHTMLEntities(item['label']));
    }
});

$('#input-customer').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=cms/comment.autocomplete&user_token={{ user_token }}&filter_customer=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['customer_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#input-customer').val(decodeHTMLEntities(item['label']));
    }
});

$('#form-comment-edit #input-customer-modal').autocomplete({
    'source': function(request, response) {
        $.ajax({
            url: 'index.php?route=cms/comment.autocomplete&user_token={{ user_token }}&filter_customers=' + encodeURIComponent(request),
            dataType: 'json',
            success: function(json) {
                response($.map(json, function(item) {
                    return {
                        label: item['name'],
                        value: item['customer_id']
                    }
                }));
            }
        });
    },
    'select': function(item) {
        $('#form-comment-edit #input-customer-modal').val(decodeHTMLEntities(item['label']));
    }
});

$('#button-refresh').on('click', function() {
    var element = this;

    $(element).button('loading');

    var next = 'index.php?route=cms/comment.refresh&user_token={{ user_token }}';

    var rate = function() {
        return $.ajax({
            url: next,
            dataType: 'json',
            success: function(json) {
                console.log(json);

                $('.alert-dismissible').remove();
                $('.invalid-feedback').removeClass('d-block');

                if (json['error']) {
                    $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fa-solid fa-circle-exclamation"></i> ' + json['error'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                    $(element).button('reset');
                }

                if (json['text']) {
                    $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fa-solid fa-check-circle-circle"></i> ' + json['text'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
                }

                if (json['success']) {
                    $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fa-solid fa-check-circle-circle"></i> ' + json['success'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                    $(element).button('reset');

					$('#list').load($('#form-comment').attr('data-oc-load'));
                }

                if (json['next']) {
                    next = json['next'];

                    chain.attach(rate);
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {
                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);

                $(element).button('reset');
            }
        });
    };

    chain.attach(rate);
});
//--></script>
{{ footer }}
